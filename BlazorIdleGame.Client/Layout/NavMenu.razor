@implements IDisposable
@inject BlazorIdleGame.Client.Services.Auth.IAuthService AuthService
<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        @if (AuthService.IsAuthenticated)
        {
            <a href="" class="navbar-brand">用户:@AuthService.CurrentPlayer.Name</a>
        }
        else
        {
            <a href="" class="navbar-brand">银河魔男放置</a>
        }
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span>主页
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="battle-test">
                <span class="bi bi-lightning-charge-fill" aria-hidden="true"></span>战斗测试
            </NavLink>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override void OnInitialized()
    {
        AuthService.AuthenticationStateChanged += OnAuthStateChanged;
    }

    private void OnAuthStateChanged()
    {
        InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        AuthService.AuthenticationStateChanged -= OnAuthStateChanged;
    }
}