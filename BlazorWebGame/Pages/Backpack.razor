@page "/backpack"
@page "/"
@using BlazorWebGame.Models
@using BlazorWebGame.Services
@inject GameStateService GameState
@implements IDisposable

<PageTitle>背包</PageTitle>

@if (GameState.Player != null)
{
    <div class="backpack-container">
        <!-- 左侧：背包网格 -->
        <div class="inventory-panel">
            <h3>背包</h3>
            <div class="inventory-grid">
                @foreach (var slot in GameState.Player.Inventory)
                {
                    @if (!slot.IsEmpty)
                    {
                        var item = ItemData.GetItemById(slot.ItemId!)!;
                        <div class="item-slot @(_selectedItemForDetailView?.Id == item.Id ? "selected" : "")" @onclick="() => SelectItemForDetail(item)">
                            <div class="item-icon">@item.Name.Substring(0, 1)</div>
                            @if (item.IsStackable && slot.Quantity > 1)
                            {
                                <span class="item-quantity">@slot.Quantity</span>
                            }
                            <div class="item-tooltip">@item.Name</div>
                        </div>
                    }
                    else
                    {
                        <div class="item-slot empty"></div>
                    }
                }
            </div>
        </div>

        <!-- 中间：物品详情 -->
        <div class="item-detail-panel">
            <h3>物品详情</h3>
            @if (_selectedItemForDetailView != null)
            {
                <div class="detail-card">
                    <div class="detail-header">
                        <h5>@_selectedItemForDetailView.Name</h5>
                    </div>
                    <p class="detail-description">@_selectedItemForDetailView.Description</p>
                    <p><strong>售价:</strong> @_selectedItemForDetailView.Value 金币</p>

                    @if (_selectedItemForDetailView is Equipment eq)
                    {
                        <hr />
                        <div class="detail-stats">
                            <p><strong>类型:</strong> @eq.Slot.ToString()</p>
                            @if (eq.AttackBonus > 0)
                            {
                                <p><strong>攻击力:</strong> <span class="stat-bonus">+@eq.AttackBonus</span></p>
                            }
                            @if (eq.HealthBonus > 0)
                            {
                                <p><strong>生命值:</strong> <span class="stat-bonus">+@eq.HealthBonus</span></p>
                            }
                        </div>
                        <hr />
                        <div class="d-flex gap-2">
                            <button class="btn btn-success" @onclick="() => GameState.EquipItem(eq.Id)">装备</button>
                            <button class="btn btn-warning" @onclick="() => SellSelectedItem()">出售</button>
                        </div>
                    }
                    else
                    {
                        <hr />
                        <div class="d-flex gap-2">
                            <button class="btn btn-warning" @onclick="() => SellSelectedItem()">出售</button>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="detail-card-placeholder">
                    <p>从左侧背包中选择一件物品查看详情。</p>
                </div>
            }
        </div>

        <!-- 右侧：装备栏 -->
        <div class="equipment-panel">
            <h3>装备</h3>
            <div class="player-stats">
                <p>生命值: @GameState.Player.Health / @GameState.Player.GetTotalMaxHealth()</p>
                <p>攻击力: @GameState.Player.GetTotalAttackPower()</p>
                <p>金币: @GameState.Player.Gold</p>
            </div>
            <div class="equipment-slots">
                @foreach (var slot in (EquipmentSlot[])Enum.GetValues(typeof(EquipmentSlot)))
                {
                    <div class="equipment-slot-display" @onclick="() => OnSlotClick(slot)">
                        <span class="slot-name">@slot.ToString()</span>
                        @if (GameState.Player.EquippedItems.TryGetValue(slot, out var itemId))
                        {
                            var item = (Equipment)ItemData.GetItemById(itemId)!;
                            <div class="item-display equipped">
                                @item.Name
                                <div class="item-tooltip">
                                    <strong>@item.Name</strong><br />
                                    <small>@item.Slot</small><hr />
                                    @if (item.AttackBonus > 0)
                                    {
                                        <span>攻击力 +@item.AttackBonus<br /></span>
                                    }
                                    @if (item.HealthBonus > 0)
                                    {
                                        <span>生命值 +@item.HealthBonus<br /></span>
                                    }
                                    <hr /><em>@item.Description</em>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="item-display empty">空</div>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
}
else
{
    <p>正在加载玩家数据...</p>
}


@code {
    private Item? _selectedItemForDetailView;

    protected override void OnInitialized()
    {
        GameState.OnStateChanged += StateHasChanged;
    }

    private void SelectItemForDetail(Item item)
    {
        _selectedItemForDetailView = item;
    }

    private void OnSlotClick(EquipmentSlot slot)
    {
        if (GameState.Player != null && GameState.Player.EquippedItems.ContainsKey(slot))
        {
            var itemId = GameState.Player.EquippedItems[slot];
            _selectedItemForDetailView = ItemData.GetItemById(itemId);
        }
    }

    private void SellSelectedItem()
    {
        if (_selectedItemForDetailView != null)
        {
            // 默认一次卖一个
            GameState.SellItem(_selectedItemForDetailView.Id, 1);
            _selectedItemForDetailView = null; // 出售后清空详情显示
        }
    }

    public void Dispose()
    {
        GameState.OnStateChanged -= StateHasChanged;
    }
}