@using BlazorWebGame.Models
@using BlazorWebGame.Models.Items
@using BlazorWebGame.Services
@inject GameStateService GameState
@implements IDisposable

@if (GameState.AllCharacters.Any())
{
    <div class="multi-character-status-container">
        @foreach (var character in GameState.AllCharacters)
        {
            // --- vvv 这是本次的核心修正 vvv ---
            // 我们将 @onclick 从这个 div 移动到了它内部的 status-display div 上
            <div class="character-status-row @(character.IsDead ? "player-dead" : "") @(GameState.ActiveCharacter?.Id == character.Id ? "active" : "")">

                <div class="status-display" @onclick="() => SwitchCharacter(character.Id)">
                    <div class="status-left">
                        <span>
                            <strong>@character.Name</strong> (Lv. @character.GetLevel(character.SelectedBattleProfession))
                            - 状态: <strong>@character.CurrentAction.ToString()</strong>
                            | 生命: <strong>@character.Health / @character.MaxHealth</strong>
                            | 金币: <strong>@character.Gold</strong>
                        </span>
                    </div>

                    <div class="status-right">
                        @foreach (var buff in character.ActiveBuffs.OrderBy(b => b.SourceItemId))
                        {
                            var buffItem = ItemData.GetItemById(buff.SourceItemId);
                            if (buffItem != null)
                            {
                                <div class="buff-icon" title="@buffItem.Name (+@buff.BuffValue @buff.BuffType.ToString())">
                                    <span class="buff-icon-text">@buffItem.Name.Substring(0, 1)</span>
                                    <span class="buff-timer">@((int)buff.TimeRemainingSeconds)</span>
                                </div>
                            }
                        }
                    </div>
                </div>

            </div>
            // --- ^^^ 修正结束 ^^^ ---
        }
    </div>
}
else
{
    <div class="multi-character-status-container">
        <p>正在加载角色...</p>
    </div>
}

@code {
    protected override void OnInitialized()
    {
        GameState.OnStateChanged += StateHasChanged;
    }

    private void SwitchCharacter(string characterId)
    {
        if (GameState.ActiveCharacter?.Id != characterId)
        {
            GameState.SetActiveCharacter(characterId);
        }
    }

    public void Dispose()
    {
        GameState.OnStateChanged -= StateHasChanged;
    }
}